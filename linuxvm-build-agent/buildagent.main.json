{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "15504993557645695460"
    }
  },
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "VM Name"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username for VMs"
      }
    },
    "adminSshPubKey": {
      "type": "string",
      "metadata": {
        "description": "Administrative SSH key for the VM"
      }
    },
    "buildScriptPath": {
      "type": "string",
      "defaultValue": "[format('{0}/startbuild.sh', deployment().properties.templateLink.id)]",
      "metadata": {
        "description": "build script"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[take(format('{0}KeyVault', parameters('vmName')), 24)]",
      "metadata": {
        "description": "Name of Key Vault"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location to deploy resources, defaults to deployment location"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[format('{0}Rg', parameters('vmName'))]",
      "metadata": {
        "description": "Resource group name"
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "VM SKU to use for VM"
      }
    },
    "deployKeyVault": {
      "type": "bool",
      "metadata": {
        "description": "Deploy KeyVault"
      }
    }
  },
  "functions": [],
  "variables": {
    "vNetBuildAgentDefinitions": {
      "name": "buildagentVnet",
      "location": "[parameters('location')]",
      "addressSpacePrefix": "192.168.128.0/24",
      "subnets": [
        {
          "name": "worker",
          "subnetPrefix": "192.168.128.0/25"
        }
      ]
    },
    "roleDefinition_keyVaultAdmin": "00482a5a-887f-4fb3-b363-3b7fe8e74483"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "vnetDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vNetBuildAgentDefinitions": {
            "value": "[variables('vNetBuildAgentDefinitions')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "311565563404121729"
            }
          },
          "parameters": {
            "vNetBuildAgentDefinitions": {
              "type": "object",
              "metadata": {
                "description": "Virtual network address prefix, e.g. 10.0.0.0/28"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-02-01",
              "name": "[parameters('vNetBuildAgentDefinitions').name]",
              "location": "[parameters('vNetBuildAgentDefinitions').location]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "192.168.128.0/24"
                  ]
                },
                "subnets": [
                  {
                    "name": "worker",
                    "properties": {
                      "addressPrefix": "192.168.128.0/25",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'buildagent-nsg')]"
                      },
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "192.168.128.128/27"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'buildagent-nsg')]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-02-01",
              "name": "buildagent-nsg",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": []
              }
            }
          ],
          "outputs": {
            "virtualNetwork": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vNetBuildAgentDefinitions').name), '2021-02-01', 'full')]"
            },
            "subnetResourceId": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('vNetBuildAgentDefinitions').subnets)]",
                "input": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetBuildAgentDefinitions').name, reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vNetBuildAgentDefinitions').name)).subnets[copyIndex()].name)]"
                }
              }
            },
            "vnetResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetBuildAgentDefinitions').name)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "vmDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminSshPubKey": {
            "value": "[parameters('adminSshPubKey')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "vmSku": {
            "value": "[parameters('vmSku')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "subnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2020-06-01').outputs.subnetResourceId.value[0].id]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "13940814715879155849"
            }
          },
          "parameters": {
            "adminUserName": {
              "type": "string",
              "metadata": {
                "description": "Admin username for VMs"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "VM name"
              }
            },
            "vmSku": {
              "type": "string",
              "metadata": {
                "description": "VM SKU to use for VM"
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Subnet resourceId to link the VM to"
              }
            },
            "adminSshPubKey": {
              "type": "string",
              "metadata": {
                "description": "Administrative SSH key for the VM"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}-pip', parameters('vmName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAllocationMethod": "Dynamic"
              },
              "sku": {
                "name": "Basic"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('vmName')))]"
                      },
                      "subnet": {
                        "id": "[parameters('subnetResourceId')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[parameters('vmName')]",
              "location": "[resourceGroup().location]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSku')]"
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('adminUserName')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "provisionVMAgent": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUserName'))]",
                          "keyData": "[parameters('adminSshPubKey')]"
                        }
                      ]
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "diskSizeGB": 30
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2019-07-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "condition": "[parameters('deployKeyVault')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "kvDeploy",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "subnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2020-06-01').outputs.subnetResourceId.value[0].id]"
          },
          "vmPrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vmDeploy'), '2020-06-01').outputs.principalId.value]"
          },
          "vnetResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy'), '2020-06-01').outputs.vnetResourceId.value]"
          },
          "roleDef": {
            "value": "[variables('roleDefinition_keyVaultAdmin')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "8601574704847779234"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Name of Key Vault"
              }
            },
            "subnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Subnet resourceId to link the VM to"
              }
            },
            "vmPrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Azure AD principal id of the VM managed identity"
              }
            },
            "vnetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Full resource id of the virtual network in which to create the private endpoint"
              }
            },
            "roleDef": {
              "type": "string",
              "metadata": {
                "description": "Role assigned to the VM"
              }
            }
          },
          "functions": [],
          "variables": {
            "privateLink_dns_zone": "privatelink.vaultcore.azure.net"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enablePurgeProtection": true,
                "enableRbacAuthorization": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "networkAcls": {
                  "bypass": "None",
                  "defaultAction": "Deny",
                  "virtualNetworkRules": []
                },
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(format('{0}{1}{2}', parameters('vmPrincipalId'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), parameters('roleDef')))]",
              "properties": {
                "principalId": "[parameters('vmPrincipalId')]",
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDef'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateLink_dns_zone')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateLink_dns_zone'), format('{0}-link', variables('privateLink_dns_zone')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetResourceId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateLink_dns_zone'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}-pe', parameters('keyVaultName'))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetResourceId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-svccon', parameters('keyVaultName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}', format('{0}-pe', parameters('keyVaultName')), format('{0}-dnszonegroup', parameters('keyVaultName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "config1",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateLink_dns_zone'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateLink_dns_zone'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', parameters('keyVaultName')))]"
              ]
            }
          ],
          "outputs": {
            "vault": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2019-09-01', 'full')]"
            },
            "akvName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vmDeploy')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vnetDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "vmScipt",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "buildScriptPath": {
            "value": "[parameters('buildScriptPath')]"
          },
          "akvName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'kvDeploy'), '2020-06-01').outputs.akvName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1008.15138",
              "templateHash": "3146178266448506439"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "Vm name"
              }
            },
            "buildScriptPath": {
              "type": "string",
              "metadata": {
                "description": "Run build script"
              }
            },
            "akvName": {
              "type": "string",
              "metadata": {
                "description": "Azure Key Vault name"
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'build_opensslengine')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "skipDos2Unix": false,
                  "timestamp": 123458,
                  "fileUris": [
                    "[parameters('buildScriptPath')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[format('sh startbuild.sh {0}', parameters('akvName'))]"
                }
              }
            }
          ],
          "outputs": {
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2019-07-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'kvDeploy')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ]
}